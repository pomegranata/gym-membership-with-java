package model;

import viewmember.*;
import viewtrainer.*;
import viewjadwal.*;

/**
 *
 * @author Imelda Maretta Putri
 * F11.2022.00053
 */
public class MainForm extends javax.swing.JFrame {
    
    private DataMember dMember;
    private FormMember fMember;
    private UpdateMember upMember;
    private DeleteMember delMember;
    private ReadMember readMember;
    private InsertTrainer insTrainer;
    private UpdateTrainer upTrainer;
    private DeleteTrainer delTrainer;
    private ReadTrainer readTrainer;
    private InsertJadwal insJadwal;
    private UpdateJadwal upJadwal;
    private DeleteJadwal delJadwal;
    private ReadJadwal readJadwal;
    
    /**
     * Creates new form MainForm
     */
    
    //public static Connection con;
    //DataMember dataMember;
    
    public MainForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        MemberMDI = new javax.swing.JMenuItem();
        MemberInsert = new javax.swing.JMenuItem();
        MemberUpdate = new javax.swing.JMenuItem();
        MemberDelete = new javax.swing.JMenuItem();
        MemberRead = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        TrainerInsert = new javax.swing.JMenuItem();
        TrainerUpdate = new javax.swing.JMenuItem();
        TrainerDelete = new javax.swing.JMenuItem();
        TrainerRead = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        ScheduleInsert = new javax.swing.JMenuItem();
        ScheduleUpdate = new javax.swing.JMenuItem();
        ScheduleDelete = new javax.swing.JMenuItem();
        ScheduleRead = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jMenu1.setText("Member");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        MemberMDI.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        MemberMDI.setText("MemberMDI");
        MemberMDI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MemberMDIActionPerformed(evt);
            }
        });
        jMenu1.add(MemberMDI);

        MemberInsert.setText("Insert");
        MemberInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MemberInsertActionPerformed(evt);
            }
        });
        jMenu1.add(MemberInsert);

        MemberUpdate.setText("Update");
        MemberUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MemberUpdateActionPerformed(evt);
            }
        });
        jMenu1.add(MemberUpdate);

        MemberDelete.setText("Delete");
        MemberDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MemberDeleteActionPerformed(evt);
            }
        });
        jMenu1.add(MemberDelete);

        MemberRead.setText("Read");
        MemberRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MemberReadActionPerformed(evt);
            }
        });
        jMenu1.add(MemberRead);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Trainer");

        TrainerInsert.setText("Insert");
        TrainerInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TrainerInsertActionPerformed(evt);
            }
        });
        jMenu2.add(TrainerInsert);

        TrainerUpdate.setText("Update");
        TrainerUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TrainerUpdateActionPerformed(evt);
            }
        });
        jMenu2.add(TrainerUpdate);

        TrainerDelete.setText("Delete");
        TrainerDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TrainerDeleteActionPerformed(evt);
            }
        });
        jMenu2.add(TrainerDelete);

        TrainerRead.setText("Read");
        TrainerRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TrainerReadActionPerformed(evt);
            }
        });
        jMenu2.add(TrainerRead);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Jadwal");

        ScheduleInsert.setText("Insert");
        ScheduleInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScheduleInsertActionPerformed(evt);
            }
        });
        jMenu3.add(ScheduleInsert);

        ScheduleUpdate.setText("Update");
        ScheduleUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScheduleUpdateActionPerformed(evt);
            }
        });
        jMenu3.add(ScheduleUpdate);

        ScheduleDelete.setText("Delete");
        ScheduleDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScheduleDeleteActionPerformed(evt);
            }
        });
        jMenu3.add(ScheduleDelete);

        ScheduleRead.setText("Read");
        ScheduleRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScheduleReadActionPerformed(evt);
            }
        });
        jMenu3.add(ScheduleRead);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 605, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 292, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        //
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void MemberMDIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MemberMDIActionPerformed
        if(dMember==null){
            dMember = new DataMember();
        }
        
        this.add(dMember);
        dMember.show(true);
    }//GEN-LAST:event_MemberMDIActionPerformed

    private void MemberInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MemberInsertActionPerformed
        if(fMember==null){
            fMember = new FormMember();
        }
        fMember.setVisible(true); 
    }//GEN-LAST:event_MemberInsertActionPerformed

    private void MemberUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MemberUpdateActionPerformed
        if(upMember==null){
            upMember = new UpdateMember();
        }
        upMember.setVisible(true); 
    }//GEN-LAST:event_MemberUpdateActionPerformed

    private void MemberDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MemberDeleteActionPerformed
        if(delMember==null){
            delMember = new DeleteMember();
        }
        delMember.setVisible(true); 
    }//GEN-LAST:event_MemberDeleteActionPerformed

    private void MemberReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MemberReadActionPerformed
        if(readMember==null){
            readMember = new ReadMember();
        }
        readMember.setVisible(true); 
    }//GEN-LAST:event_MemberReadActionPerformed

    private void TrainerInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TrainerInsertActionPerformed
        if(insTrainer == null){
            insTrainer = new InsertTrainer();
        }
        
        insTrainer.setVisible(true);
    }//GEN-LAST:event_TrainerInsertActionPerformed

    private void TrainerUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TrainerUpdateActionPerformed
       if(upTrainer == null){
            upTrainer = new UpdateTrainer();
        }
        
        upTrainer.setVisible(true);
    }//GEN-LAST:event_TrainerUpdateActionPerformed

    private void TrainerDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TrainerDeleteActionPerformed
        if(delTrainer == null){
            delTrainer = new DeleteTrainer();
        }
        
        delTrainer.setVisible(true);
    }//GEN-LAST:event_TrainerDeleteActionPerformed

    private void TrainerReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TrainerReadActionPerformed
        if(readTrainer == null){
            readTrainer = new ReadTrainer();
        }
        
        readTrainer.setVisible(true);
    }//GEN-LAST:event_TrainerReadActionPerformed

    private void ScheduleInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScheduleInsertActionPerformed
        if(insJadwal == null){
            insJadwal = new InsertJadwal();
        }
        
        insJadwal.setVisible(true);
    }//GEN-LAST:event_ScheduleInsertActionPerformed

    private void ScheduleUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScheduleUpdateActionPerformed
        if(upJadwal == null){
            upJadwal = new UpdateJadwal();
        }
        
        upJadwal.setVisible(true);
    }//GEN-LAST:event_ScheduleUpdateActionPerformed

    private void ScheduleDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScheduleDeleteActionPerformed
       if(delJadwal == null){
           delJadwal = new DeleteJadwal();
       }
       
       delJadwal.setVisible(true);
    }//GEN-LAST:event_ScheduleDeleteActionPerformed

    private void ScheduleReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScheduleReadActionPerformed
       if(readJadwal == null){
           readJadwal = new ReadJadwal();
       }
       
       readJadwal.setVisible(true);
    }//GEN-LAST:event_ScheduleReadActionPerformed
    
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
                /*try {
                    Class.forName("com.mysql.cj.jdbc.Driver");
                    con = DriverManager.getConnection
                    ("jdbc:mysql://127.0.0.1:3306/membership","root","");
                } catch (ClassNotFoundException ex) {
                    System.out.println("Error Driver");
                } catch (SQLException ex) {
                    System.out.println("Error Database");
                }*/
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem MemberDelete;
    private javax.swing.JMenuItem MemberInsert;
    private javax.swing.JMenuItem MemberMDI;
    private javax.swing.JMenuItem MemberRead;
    private javax.swing.JMenuItem MemberUpdate;
    private javax.swing.JMenuItem ScheduleDelete;
    private javax.swing.JMenuItem ScheduleInsert;
    private javax.swing.JMenuItem ScheduleRead;
    private javax.swing.JMenuItem ScheduleUpdate;
    private javax.swing.JMenuItem TrainerDelete;
    private javax.swing.JMenuItem TrainerInsert;
    private javax.swing.JMenuItem TrainerRead;
    private javax.swing.JMenuItem TrainerUpdate;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    // End of variables declaration//GEN-END:variables
}
